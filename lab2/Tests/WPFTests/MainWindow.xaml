<Window x:Class="WPFTests.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFTests"
        mc:Ignorable="d"
        Title="MainWindow" Height="638" Width="848">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="TestButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <StackPanel Orientation="Horizontal">
                                <Ellipse Name="ButtonEllipse" Width="16" Height="16" Fill="Red" Margin="5,0"/>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter TargetName="ButtonEllipse" Property="Fill" Value="Blue"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Button Content="Отправить" HorizontalAlignment="Left" Height="55" Margin="325,194,0,0" VerticalAlignment="Top" Width="135" RenderTransformOrigin="0.5,0.5" Click="OnSendButtonClick"
                Style="{StaticResource TestButtonStyle}">
            <Button.Effect>
                <BlurEffect Radius="2"/>
            </Button.Effect>
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="-22.097"/>
                    <RotateTransform Angle="41.11"/>
                    <TranslateTransform X="8.412" Y="7.341"/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <TextBox Name="LoginEdit" HorizontalAlignment="Left" Height="20" Margin="140,129,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" RenderTransformOrigin="0.5,0.5">
            <TextBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-20.689" x:Name="Rotator"/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBox.RenderTransform>
            <TextBox.Effect>
                <DropShadowEffect/>
            </TextBox.Effect>
        </TextBox>
        <PasswordBox Name="PasswordEdit" HorizontalAlignment="Left" Height="20" Margin="485,129,0,0" VerticalAlignment="Top" Width="210" RenderTransformOrigin="0.5,0.5">
            <PasswordBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="12.75"/>
                    <TranslateTransform/>
                </TransformGroup>
            </PasswordBox.RenderTransform>
        </PasswordBox>
        <TextBlock HorizontalAlignment="Left" Margin="175,84,0,0" Text="Имя пользователя" TextWrapping="Wrap" VerticalAlignment="Top"/>
        <Label Content="Пароль" HorizontalAlignment="Left" Margin="485,79,0,0" VerticalAlignment="Top"/>
        <TextBox HorizontalAlignment="Left" Margin="635,80,0,0" Text="TextBox" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <Button Style="{StaticResource TestButtonStyle}" Content="Button" HorizontalAlignment="Left" Margin="550,194,0,0" VerticalAlignment="Top" Height="40" Width="85"/>
        <RadioButton Content="RadioButton" HorizontalAlignment="Left" Margin="40,114,0,0" VerticalAlignment="Top"/>
        <CheckBox Content="CheckBox" HorizontalAlignment="Left" Margin="40,149,0,0" VerticalAlignment="Top"/>
        <ComboBox HorizontalAlignment="Left" Margin="40,194,0,0" VerticalAlignment="Top" Width="120"/>
        <Calendar HorizontalAlignment="Left" Margin="60,227,0,0" VerticalAlignment="Top"/>
        <Slider HorizontalAlignment="Left" Margin="424,389,0,0" VerticalAlignment="Top" Width="331" Height="18"/>

    </Grid>
</Window>
